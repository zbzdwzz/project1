//
// 17-651: FSP model of a simple infusion pump
//
// ASSUMPTIONS
// - The user can choose, in the setup phase, which item of info to enter next.
// - The simple enter_value action is a simple number pad where the user enters
//   numeric values.
// - There exist 'set' and 'cancel' buttons, which are the targets of press_set
//   and press_cancel.
// - When the user turns the unit off, the unit will be in a state as if it was
//   just plugged in.
//

//
// Set of actions that the user of the LTSA tool can control in an
// animation of this model.
//
menu UserControlMenu = {
    change_settings, clear_rate, confirm_settings, connect_set,
    dispense_main_med_flow, enter_value, erase_and_unlock_line,
    flow_unblocked, sound_alarm, lock_unit, plug_in, press_cancel, 
    press_set, set_rate, silence_alarm, turn_off, unlock_unit, unplug,
    flow_blocked
}

//======================
// Constants and Ranges
//======================

//
// States of the pump alarm
//
const AlarmActivated = 0    // Alarm currently active
const AlarmSilenced  = 1    // Alarm currently inactive

range AlarmStateT = AlarmActivated .. AlarmSilenced

//
// States of the pump settings (rate)
//
const RateNotSet = 2    // pump parameters not set yet (rate)
const RateSet    = 3    // pump parameters already set (rate)
const RateIncorrect = 4 // pump has detected incorrect rate

range RateStateT = RateNotSet .. RateIncorrect

//
// Locked/unlocked states of a line with respect to a pump channel
//
const LineUnlocked = 5  // line not locked into a pump channel 
const LineLocked   = 6  // line locked into a pump channel

range LineLockStateT = LineUnlocked .. LineLocked

//
// Locked/unlocked states of the pump unit
//
const UnitUnlocked = 7  // the keypad of the pump is not locked
const UnitLocked   = 8  // the keypad of the pump is locked

range UnitLockStateT = UnitUnlocked .. UnitLocked

//
// States of medicine amount
//
const MedAmtSet = 9
const MedAmtNotSet = 10

range MedAmtStateT = MedAmtSet .. MedAmtNotSet


//=====================
// Process Definitions
//=====================

PUMP = UNPLUGGED,

UNPLUGGED =
(
    plug_in -> POWER_OFF
),

POWER_OFF = 
(
    turn_on -> SETUP[RateNotSet][MedAmtNotSet][LineUnlocked]
),

//
// Pump in setup mode:
// - Once required pump parameters (just rate in this case) are set,
//   physical connections can be made and line can be locked
//
SETUP[rate:RateStateT][medAmt:MedAmtStateT][lineLock:LineLockStateT] = 
(
    unplug -> UNPLUGGED
    |
    turn_off -> POWER_OFF
    |
    when (rate == RateNotSet && lineLock == LineUnlocked)
		set_rate ->
			(enter_value -> 
            	(press_set -> SETUP[RateSet][medAmt][lineLock]
             	|
             	press_cancel -> SETUP[RateNotSet][medAmt][lineLock])
			|
			 press_cancel -> SETUP[RateNotSet][medAmt][lineLock])
	|
	when (lineLock == LineUnlocked && medAmt == MedAmtNotSet)
		set_amount ->
			(enter_value -> 
            	(press_set -> SETUP[rate][MedAmtSet][lineLock]
             	|
             	press_cancel -> SETUP[rate][MedAmtNotSet][lineLock])
			|
			 press_cancel -> SETUP[rate][MedAmtNotSet][lineLock])
    |
    when (rate == RateSet && lineLock == LineUnlocked)
        clear_rate -> SETUP[RateNotSet][medAmt][lineLock]
    |
	when (medAmt == MedAmtSet && lineLock == LineUnlocked)
		clear_amount -> SETUP[rate][MedAmtNotSet][lineLock]
	|
    when (rate == RateSet && lineLock == LineUnlocked && medAmt == MedAmtSet)
        connect_set -> purge_air -> lock_line -> SETUP[rate][medAmt][LineLocked]
    |
    when (lineLock == LineLocked)
        confirm_settings -> INFUSION[UnitUnlocked]
    |
    when (lineLock == LineLocked)
        erase_and_unlock_line -> SETUP[rate][medAmt][LineUnlocked]
),

//
// Pump in infusion mode:
// - Always be able to turn the unit off, even if locked
// - Allow the user to lock/unlock the unit
// - Errors could occur with the pump (e.g., line became pinched or plugged)
//
INFUSION[unitLock:UnitLockStateT] =
(
    unplug -> UNPLUGGED
    |
    turn_off -> POWER_OFF
    |
    when (unitLock == UnitUnlocked)
        change_settings -> SETUP[RateSet][MedAmtSet][LineLocked]
    |
    when (unitLock == UnitUnlocked)
        lock_unit -> INFUSION[UnitLocked]
    |
    when (unitLock == UnitLocked)
        unlock_unit -> INFUSION[UnitUnlocked]
    |
    dispense_main_med_flow -> INFUSION[unitLock]
    |
    flow_blocked -> sound_alarm -> INFUSION_BLOCKED[RateSet][unitLock][AlarmActivated]
	|
	incorrect_rate -> sound_alarm -> INFUSION_BLOCKED[RateIncorrect][unitLock][AlarmActivated]
),

//
// Pump stuck (medication flow suspended)
//
INFUSION_BLOCKED[rate:RateStateT][unitLock:UnitLockStateT][alarm:AlarmStateT] =
(
    unplug -> UNPLUGGED
    |
    turn_off -> POWER_OFF
    |
    when (alarm == AlarmActivated)
        sound_alarm -> INFUSION_BLOCKED[rate][unitLock][alarm]
    |
    when (alarm == AlarmActivated)
        silence_alarm -> INFUSION_BLOCKED[rate][unitLock][AlarmSilenced]
    |
    when (rate != RateIncorrect)
		flow_unblocked -> INFUSION[unitLock]
	|
	when (rate == RateIncorrect)
		correct_rate -> INFUSION[unitLock]
).



Yiqunâ€™s Changes :

//
// 17-651: FSP model of a simple infusion pump
//
// ASSUMPTIONS
// - The user can choose, in the setup phase, which item of info to enter next.
// - The simple enter_value action is a simple number pad where the user enters
//   numeric values.
// - There exist 'set' and 'cancel' buttons, which are the targets of press_set
//   and press_cancel.
// - When the user turns the unit off, the unit will be in a state as if it was
//   just plugged in.
//

//
// Set of actions that the user of the LTSA tool can control in an
// animation of this model.
//
menu UserControlMenu = {
    change_settings, clear_rate, confirm_settings, connect_set,
    dispense_main_med_flow, enter_value, erase_and_unlock_line,
    flow_unblocked, sound_alarm, lock_unit, plug_in, press_cancel, 
    press_set, set_rate, silence_alarm, turn_off, unlock_unit, unplug,
    flow_blocked
}

//======================
// Constants and Ranges
//======================

//
// States of the pump alarm
//
const AlarmActivated = 0    // Alarm currently active
const AlarmSilenced  = 1    // Alarm currently inactive

range AlarmStateT = AlarmActivated .. AlarmSilenced

//
// States of the pump settings (rate)
//
const RateNotSet = 2    // pump parameters not set yet (rate)
const RateSet    = 3    // pump parameters already set (rate)

range RateStateT = RateNotSet .. RateSet

//
// Locked/unlocked states of a line with respect to a pump channel
//
const LineUnlocked = 4  // line not locked into a pump channel 
const LineLocked   = 5  // line locked into a pump channel

range LineLockStateT = LineUnlocked .. LineLocked

//
// Locked/unlocked states of the pump unit
//
const UnitUnlocked = 6  // the keypad of the pump is not locked
const UnitLocked   = 7  // the keypad of the pump is locked

range UnitLockStateT = UnitUnlocked .. UnitLocked

//
// States of medicine amount
//
const MedAmtSet = 8
const MedAmtNotSet = 9

range MedAmtStateT = MedAmtSet .. MedAmtNotSet


//=====================
// Process Definitions
//=====================

PUMP = UNPLUGGED,

UNPLUGGED =
(
    plug_in -> POWER_OFF
),

POWER_OFF = 
(
    turn_on -> SETUP[RateNotSet][MedAmtNotSet][LineUnlocked]
),

//
// Pump in setup mode:
// - Once required pump parameters (just rate in this case) are set,
//   physical connections can be made and line can be locked
//
SETUP[rate:RateStateT][medAmt:MedAmtStateT][lineLock:LineLockStateT] = 
(
    unplug -> UNPLUGGED
    |
    turn_off -> POWER_OFF
    |
    when (rate == RateNotSet && lineLock == LineUnlocked)
		set_rate ->
			(enter_value -> 
            	(press_set -> SETUP[RateSet][medAmt][lineLock]
             	|
             	press_cancel -> SETUP[RateNotSet][medAmt][lineLock])
			|
			 press_cancel -> SETUP[RateNotSet][medAmt][lineLock])
	|
	when (lineLock == LineUnlocked && medAmt == MedAmtNotSet)
		set_amount ->
			(enter_value -> 
            	(press_set -> SETUP[rate][MedAmtSet][lineLock]
             	|
             	press_cancel -> SETUP[rate][MedAmtNotSet][lineLock])
			|
			 press_cancel -> SETUP[rate][MedAmtNotSet][lineLock])
    |
    when (rate == RateSet && lineLock == LineUnlocked)
        clear_rate -> SETUP[RateNotSet][medAmt][lineLock]
    |
	when (medAmt == MedAmtSet && lineLock == LineUnlocked)
		clear_amount -> SETUP[rate][MedAmtNotSet][lineLock]
	|
    when (rate == RateSet && lineLock == LineUnlocked && medAmt == MedAmtSet)
        connect_set -> purge_air -> lock_line -> SETUP[rate][medAmt][LineLocked]
    |
    when (lineLock == LineLocked)
        confirm_settings -> INFUSION[UnitUnlocked]
    |
    when (lineLock == LineLocked)
        erase_and_unlock_line -> SETUP[rate][medAmt][LineUnlocked]
),

//
// Pump in infusion mode:
// - Always be able to turn the unit off, even if locked
// - Allow the user to lock/unlock the unit
// - Errors could occur with the pump (e.g., line became pinched or plugged)
//
INFUSION[unitLock:UnitLockStateT] =
(
    unplug -> UNPLUGGED
    |
    turn_off -> POWER_OFF
    |
    when (unitLock == UnitUnlocked)
        change_settings -> SETUP[RateSet][MedAmtSet][LineLocked]
    |
    when (unitLock == UnitUnlocked)
        lock_unit -> INFUSION[UnitLocked]
    |
    when (unitLock == UnitLocked)
        unlock_unit -> INFUSION[UnitUnlocked]
    |
    dispense_main_med_flow -> INFUSION[unitLock]
    |
    flow_blocked -> sound_alarm -> INFUSION_BLOCKED[unitLock][AlarmActivated]
),

//
// Pump stuck (medication flow suspended)
//
INFUSION_BLOCKED[unitLock:UnitLockStateT][alarm:AlarmStateT] =
(
    unplug -> UNPLUGGED
    |
    turn_off -> POWER_OFF
    |
    when (alarm == AlarmActivated)
        sound_alarm -> INFUSION_BLOCKED[unitLock][alarm]
    |
    when (alarm == AlarmActivated)
        silence_alarm -> INFUSION_BLOCKED[unitLock][AlarmSilenced]
    |
    flow_unblocked -> INFUSION[unitLock]
).
